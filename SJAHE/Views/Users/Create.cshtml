@model SJAHE_BASE_LIBRARY.Models.SC_User

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm("Create", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-blue">
        <div class="panel-heading">
            <p>
                <h4>CREATE FORM</h4>
            </p>
        </div>
        <div class="panel-body">
            <h4>SC_User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.UserFullName, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.UserFullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserFullName, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserEmailAddress, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.UserEmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserEmailAddress, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserContactNo, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.UserContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserContactNo, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label" })

                @Html.PasswordFor(model => model.UserPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserImageUrl, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.UserImageUrl, new { htmlAttributes = new { @class = "form-control", type="file", onchange="show(this)" } })
                @Html.ValidationMessageFor(model => model.UserImageUrl, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserStatus, htmlAttributes: new { @class = "control-label" })

                <br />
                @Html.EditorFor(model => model.UserStatus)
                @Html.ValidationMessageFor(model => model.UserStatus, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-group">
                <div class="">
                    <img id="user_img" height="100" width="90" style="border:solid" />
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>
